name: Security

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run security checks daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  security:
    name: Security Scanning
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        channel: 'stable'
        cache: true
        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Run security audit
      run: dart pub audit
      continue-on-error: true
      
    - name: Check for vulnerable dependencies
      run: |
        # Check for known vulnerabilities in dependencies
        flutter pub deps --style=tree | grep -E "(dev_dependencies|dependencies)" || true
        
    - name: Check dependency health
      run: |
        # Check for outdated dependencies
        flutter pub outdated || true
        
    - name: Analyze for security issues
      run: flutter analyze --no-fatal-infos
      
    - name: Check for hardcoded secrets
      run: |
        # Basic secret scanning (can be enhanced with tools like truffleHog)
        # Look for common secret patterns but exclude Flutter-specific keywords
        if grep -r -i -E "(api_key|secret_key|private_key|access_token|bearer_token|password\s*=)" lib/ --exclude-dir=.dart_tool; then
          echo "Potential secrets found in code"
          exit 1
        fi
        # Check for common secret variable patterns
        if grep -r -i -E "(const.*key.*=.*['\"].*['\"])" lib/ --exclude-dir=.dart_tool | grep -v -E "(super\.key|GlobalKey|UniqueKey)"; then
          echo "Potential hardcoded keys found"
          exit 1
        fi
