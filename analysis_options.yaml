# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

analyzer:
  errors:
    # Treat certain issues as errors instead of warnings
    unused_import: error
    unused_local_variable: error
    deprecated_member_use: error
  exclude:
    - test/**

linter:
  # Conservative lint rules that focus on critical issues only
  rules:
    # === CRITICAL CODE QUALITY RULES ===
    avoid_print: true                  # Use proper logging
    avoid_unnecessary_containers: true # Performance optimization
    avoid_empty_else: true
    avoid_function_literals_in_foreach_calls: true
    
    # === PERFORMANCE RULES (Production Code Only) ===
    prefer_const_constructors: true    # Better performance
    prefer_const_literals_to_create_immutables: true
    prefer_const_declarations: true
    prefer_const_constructors_in_immutables: true
    
    # === FLUTTER SPECIFIC RULES ===
    use_build_context_synchronously: true
    use_key_in_widget_constructors: true
    sized_box_for_whitespace: true
    
    # === ERROR HANDLING ===
    only_throw_errors: true
    avoid_catches_without_on_clauses: true
    
    # === DISABLE STRICT RULES THAT CREATE TOO MANY ISSUES ===
    lines_longer_than_80_chars: true   # Enforce line length
    directives_ordering: true          # Enforce import organization  
    always_use_package_imports: false  # Too many existing violations
    prefer_single_quotes: true         # Enforce single quotes
    
    # === ENABLED RULES ===
    avoid_redundant_argument_values: true  # Catch redundant default values

# Test files are excluded from analysis to focus on production code

# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options